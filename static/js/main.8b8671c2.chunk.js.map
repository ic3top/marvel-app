{"version":3,"sources":["components/appHeader/AppHeader.tsx","resources/images/thor-weapon.png","services/marvelService/MarvelService.ts","resources/images/loader.svg","components/loader/Loader.tsx","components/errorMessage/ErrorMessage.tsx","components/randomChar/RandomChar.tsx","components/charList/charListSkeleton/CharListSkeleton.tsx","components/charList/CharList.tsx","components/skeleton/Skeleton.tsx","components/charInfo/CharInfo.tsx","resources/images/avengers.png","resources/images/avengers_logo.png","components/appBanner/AppBanner.tsx","resources/images/x-men.png","components/comicsList/ComicsList.tsx","components/singleComic/singleComic.tsx","resources/images/bg-hero.png","components/app/App.tsx","index.tsx"],"names":["AppHeader","className","to","activeClassName","MarvelService","baseUrl","apiKey","baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","offset","this","data","results","id","then","randId","Math","floor","random","getCharacterById","Loader","src","loaderImg","alt","style","margin","ErrorMessage","label","RandomCharView","char","thumbnail","description","name","urls","path","extension","href","type","RandomChar","useState","character","setCharacter","isLoading","setIsLoading","hasError","setHasError","marvelService","fetchRandomCharacter","getRandomCharacter","catch","finally","useEffect","errorMessage","loader","content","onClick","thorWeaponImg","CharListSkeleton","cardsAmount","Array","keys","map","n","CHARS_OFFSET","CharList","selectChar","chars","setChars","selectedCharId","setSelectedCharId","loadChars","getAllCharacters","onCharListLoaded","newChars","prevChars","concat","windowOnScroll","document","documentElement","scrollTop","scrollHeight","clientHeight","window","addEventListener","removeEventListener","charsContent","ch","hasImg","includes","objectFit","Skeleton","CharInfo","charId","skeleton","View","comics","items","length","item","i","AppBanner","avengersImg","avengersLogoImg","ComicsList","comicsList","img","xMenImg","price","SingleComic","App","selectedChar","setSelectedChar","exact","bgHero","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b8671c2.chunk.js","sourcesContent":["import { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport './appHeader.scss';\r\n\r\nexport const AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to=\"/\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul className=\"navigation\">\r\n                    <li className=\"navigation__item\"><NavLink to=\"/characters\" activeClassName=\"navigation__item_active\">Characters</NavLink></li>\r\n                    /\r\n                    <li className=\"navigation__item\"><NavLink to=\"/comics\" activeClassName=\"navigation__item_active\">Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/thor-weapon.b10f8e63.png\";","import {AllCharactersRes} from \"./models/AllCharactersRes\";\r\nimport {Character} from \"../../models/Caracter\";\r\n\r\nexport class MarvelService {\r\n    private baseUrl = 'https://gateway.marvel.com:443/v1/public';\r\n    private apiKey = 'apikey=2dbccd952360b55320217b27f828e217';\r\n    private baseOffset = 210;\r\n\r\n    private getResource = async <T> (url: string): Promise<T> => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    public async getAllCharacters(offset: number = this.baseOffset): Promise<Character[]> {\r\n        let res = await this.getResource<AllCharactersRes>(\r\n            `${this.baseUrl}/characters?limit=9&offset=${offset}&${this.apiKey}`\r\n        );\r\n        return res.data.results;\r\n    }\r\n\r\n    public getCharacterById(id: number | string): Promise<Character> {\r\n        return this.getResource<AllCharactersRes>(\r\n            `${this.baseUrl}/characters/${id}?${this.apiKey}`\r\n        ).then(res => res.data.results[0]);\r\n    }\r\n\r\n    public async getRandomCharacter(): Promise<Character> {\r\n        const randId = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        const res = await this.getCharacterById(randId);\r\n        return res;\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/loader.8ee2fdff.svg\";","import loaderImg from \"../../resources/images/loader.svg\";\r\n\r\nexport const Loader = () => <img src={loaderImg} alt=\"loader\" style={{ margin: \"auto\" }}/>;\r\n","import \"./errorMessage.scss\";\r\n\r\nexport const ErrorMessage = ({label = \"Hydra is currently attacking, sorry\"}: {label?: string}) => (\r\n    <div className=\"app__error-message\">\r\n        <span>404</span>\r\n        <p>{label}</p>\r\n    </div>\r\n)\r\n","import \"./randomChar.scss\";\r\n\r\nimport thorWeaponImg from \"../../resources/images/thor-weapon.png\";\r\nimport {Character} from \"../../models/Caracter\";\r\nimport {MarvelService} from \"../../services/marvelService/MarvelService\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Loader} from \"../loader/Loader\";\r\nimport {ErrorMessage} from \"../errorMessage/ErrorMessage\";\r\n\r\nconst RandomCharView = ({char}: {char: Character}) => {\r\n    const {thumbnail, description, name, urls} = char;\r\n    return (\r\n        <div className=\"random-char__left\">\r\n            <img src={thumbnail?.path + '.' + thumbnail?.extension} alt=\"randomly picked marvel hero\" className=\"random-char__img\"/>\r\n            <div className=\"random-char__info\">\r\n                <p className=\"random-char__name title title_fs-22 title_upper\">{name}</p>\r\n                <p className=\"random-char__descr text\">\r\n                    {description || 'The information about this character was not found. To read more - follow the links below'}\r\n                </p>\r\n                <div className=\"random-char__buttons\">\r\n                    <a href={urls?.[0].url} className=\"button button__main\">\r\n                        <span className=\"inner\">{urls?.[0].type}</span>\r\n                    </a>\r\n                    <a href={urls?.[1].url} className=\"button button__secondary\">\r\n                        <span className=\"inner\">{urls?.[1].type}</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RandomChar = () => {\r\n    const [character, setCharacter] = useState({} as Character);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [hasError, setHasError] = useState(false);\r\n    const marvelService = new MarvelService();\r\n\r\n    function fetchRandomCharacter() {\r\n        setHasError(false);\r\n        setIsLoading(true);\r\n        marvelService.getRandomCharacter()\r\n            .then(setCharacter)\r\n            .catch(() => setHasError(true))\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRandomCharacter();\r\n    }, []);\r\n\r\n    const errorMessage = hasError ? <ErrorMessage/> : null;\r\n    const loader = isLoading ? <Loader/> : null;\r\n    const content = !(isLoading || hasError) ? <RandomCharView char={character}/>: null;\r\n\r\n    return (\r\n        <div className=\"random-char\">\r\n            {errorMessage}\r\n            {loader}\r\n            {content}\r\n            <div className=\"random-char__right\">\r\n                <div className=\"random-char__title title title_fs-24 title_white\">Random character for today!\r\n                    Do you want to get to know him better?\r\n                </div>\r\n                <div className=\"random-char__title  title title_fs-24 title_white\">Or choose another one</div>\r\n                <button className=\"button button__main\" onClick={fetchRandomCharacter}>\r\n                    <span className=\"inner\">Try it</span>\r\n                </button>\r\n                <img src={thorWeaponImg} alt=\"mjolnir with a shield\" className=\"random-char__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./charListSkeleton.scss\";\r\n\r\nexport const CharListSkeleton = ({cardsAmount = 9}: {cardsAmount?: number}) => (\r\n    <>\r\n        {\r\n            [...Array(cardsAmount).keys()]\r\n                .map((n) =>\r\n                    <li className=\"char__item\" key={n}>\r\n                        <div className=\"pulse skeleton__card-img\"/>\r\n                        <div className=\"pulse skeleton__card-title\"/>\r\n                    </li>\r\n                )\r\n        }\r\n    </>\r\n)\r\n","import \"./charList.scss\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {MarvelService} from \"../../services/marvelService/MarvelService\";\r\nimport {Character} from \"../../models/Caracter\";\r\nimport {CharListSkeleton} from \"./charListSkeleton/CharListSkeleton\";\r\n\r\nlet CHARS_OFFSET: number = 210;\r\n\r\nexport const  CharList = ({selectChar}: {selectChar: (id: number) => void}) => {\r\n    const [chars, setChars] = useState<Character[]>([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedCharId, setSelectedCharId] = useState<number | null>(null)\r\n    const marvelService = new MarvelService();\r\n\r\n    useEffect(() => {\r\n        loadChars();\r\n        const windowOnScroll = () => {\r\n            const {\r\n                scrollTop,\r\n                scrollHeight,\r\n                clientHeight\r\n            } = document.documentElement;\r\n\r\n            if (scrollTop + clientHeight >= scrollHeight - 5) {\r\n                loadChars();\r\n            }\r\n        }\r\n        window.addEventListener('scroll', windowOnScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', windowOnScroll);\r\n        }\r\n    }, []);\r\n\r\n    function loadChars() {\r\n        if (isLoading) return;\r\n        setIsLoading(true);\r\n        marvelService.getAllCharacters(CHARS_OFFSET)\r\n            .then(onCharListLoaded)\r\n            .finally(() => {\r\n                CHARS_OFFSET += 9;\r\n                setIsLoading(false)\r\n            });\r\n    }\r\n\r\n    function onSelectChar(id: number) {\r\n        selectChar(id);\r\n        setSelectedCharId(id);\r\n    }\r\n\r\n    function onCharListLoaded(newChars: Character[]) {\r\n        setChars((prevChars) => {\r\n           return prevChars.concat(newChars)\r\n        });\r\n    }\r\n\r\n    const charsContent = chars.map(ch => {\r\n        const hasImg = ch.thumbnail.path?.includes('not_available');\r\n        return (\r\n            <li\r\n                className={`char__item${selectedCharId === ch.id ? \" char__item_selected\" : \"\"}`}\r\n                key={ch.id}\r\n                onClick={() => onSelectChar(ch.id)}\r\n            >\r\n                <img\r\n                    src={ch.thumbnail.path + '.' + ch.thumbnail.extension}\r\n                    alt={ch.name}\r\n                    style={{ objectFit: hasImg ? 'unset' : 'cover' }}\r\n                />\r\n                <span className=\"title title_upper title_white title_fs-22\">{ch.name}</span>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            <ul className=\"char__grid\">\r\n                {charsContent}\r\n                {isLoading && <CharListSkeleton/>}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import './skeleton.scss';\r\n\r\nexport const Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"/>\r\n                    <div className=\"pulse skeleton__block\"/>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n                <div className=\"pulse skeleton__mini\"/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import \"./charInfo.scss\";\r\nimport { Skeleton } from \"../skeleton/Skeleton\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Character} from \"../../models/Caracter\";\r\nimport {MarvelService} from \"../../services/marvelService/MarvelService\";\r\nimport {ErrorMessage} from \"../errorMessage/ErrorMessage\";\r\n\r\ninterface CharInfoProps {\r\n    charId?: number;\r\n}\r\n\r\nexport const CharInfo = ({ charId }: CharInfoProps) => {\r\n    const [character, setCharacter] = useState<Character | null>(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [hasError, setHasError] = useState(false);\r\n\r\n    const skeleton = !isLoading || hasError ? null : <Skeleton/>;\r\n    const errorMessage = hasError ? <ErrorMessage/> : null;\r\n    const content = !(isLoading || hasError || !character) ? <View char={character}/> : null;\r\n\r\n    const marvelService = new MarvelService();\r\n\r\n    useEffect(() => {\r\n        if (charId) {\r\n            setIsLoading(true);\r\n            setHasError(false);\r\n            marvelService.getCharacterById(charId)\r\n                .then(setCharacter)\r\n                .catch(() => setHasError(true))\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [charId]);\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}: { char: Character }) => {\r\n    const hasImg = char.thumbnail.path?.includes('not_available');\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img\r\n                    src={char.thumbnail.path + '.' + char.thumbnail.extension}\r\n                    alt={char.name}\r\n                    style={{ objectFit: hasImg ? 'unset' : 'cover' }}\r\n                />\r\n                <div>\r\n                    <div className=\"title title_fs-22 title_upper\">{char.name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href=\"#\" className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href=\"#\" className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {char.description || 'Unfortunately, no description was found for this character.'}\r\n            </div>\r\n            {!!char.comics.items?.length\r\n            && <>\r\n              <div className=\"char__comics\">Comics:</div>\r\n              <ul className=\"char__comics-list\">\r\n                  {\r\n                      char.comics.items?.map((item, i) => {\r\n                          if (i > 9) return;\r\n                          return (\r\n                              <li className=\"char__comics-item\" key={i}>{item.name}</li>\r\n                          )\r\n                      })\r\n                  }\r\n              </ul>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avengers.c29e0ef0.png\";","export default __webpack_public_path__ + \"static/media/avengers_logo.9b944f71.png\";","import './appBanner.scss';\r\nimport avengersImg from '../../resources/images/avengers.png';\r\nimport avengersLogoImg from '../../resources/images/avengers_logo.png';\r\n\r\nexport const AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengersImg} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogoImg} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/x-men.0d70f62f.png\";","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./comicsList.scss\";\r\nimport xMenImg from \"../../resources/images/x-men.png\";\r\n\r\nexport const ComicsList = () => {\r\n    const data = [\r\n        {\r\n            img: xMenImg,\r\n            name: \"ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB\",\r\n            price: \"9.99$\",\r\n            id: 1\r\n        },\r\n        {\r\n            img: xMenImg,\r\n            name: \"ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB\",\r\n            price: \"9.99$\",\r\n            id: 1\r\n        },\r\n        {\r\n            img: xMenImg,\r\n            name: \"ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB\",\r\n            price: \"9.99$\",\r\n            id: 1\r\n        },\r\n        {\r\n            img: xMenImg,\r\n            name: \"ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB\",\r\n            price: \"9.99$\",\r\n            id: 1\r\n        },\r\n        {\r\n            img: xMenImg,\r\n            name: \"ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB\",\r\n            price: \"9.99$\",\r\n            id: 1\r\n        },\r\n        {\r\n            img: xMenImg,\r\n            name: \"ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB\",\r\n            price: \"9.99$\",\r\n            id: 1\r\n        },\r\n    ];\r\n    const comicsList = data.map(i => (\r\n        <li className=\"comics__item\" key={i.id}>\r\n            <Link to={`comics/${i.id}`}>\r\n                <img src={i.img} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                <div className=\"comics__item-name\">{i.name}</div>\r\n                <div className=\"comics__item-price\">{i.price}</div>\r\n            </Link>\r\n        </li>\r\n    ))\r\n    return (\r\n        <div className=\"comics__list\">\r\n            <ul className=\"comics__grid\">\r\n                {comicsList}\r\n            </ul>\r\n            <button className=\"button button__main button__long\">\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport './singleComic.scss';\r\nimport xMenImg from '../../resources/images/x-men.png';\r\n\r\nexport const SingleComic = () => {\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={xMenImg} alt=\"x-men\" className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">X-Men: Days of Future Past</h2>\r\n                <p className=\"single-comic__descr\">Re-live the legendary first journey into the dystopian future of 2013 - where Sentinels stalk the Earth, and the X-Men are humanity's only hope...until they die! Also featuring the first appearance of Alpha Flight, the return of the Wendigo, the history of the X-Men from Cyclops himself...and a demon for Christmas!?</p>\r\n                <p className=\"single-comic__descr\">144 pages</p>\r\n                <p className=\"single-comic__descr\">Language: en-us</p>\r\n                <div className=\"single-comic__price\">9.99$</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bg-hero.4d6f9671.png\";","import {useState} from \"react\";\n\nimport {AppHeader} from \"../appHeader/AppHeader\";\nimport {RandomChar} from \"../randomChar/RandomChar\";\nimport {CharList} from \"../charList/CharList\";\nimport {CharInfo} from \"../charInfo/CharInfo\";\nimport {AppBanner} from \"../appBanner/AppBanner\";\nimport {ComicsList} from \"../comicsList/ComicsList\";\nimport {SingleComic} from \"../singleComic/singleComic\";\n\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport bgHero from '../../resources/images/bg-hero.png';\n\nfunction App() {\n    const [selectedChar, setSelectedChar] = useState<number | undefined>();\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Switch>\n                        <Route exact path=\"/\">\n                        </Route>\n                        <Route path=\"/characters\">\n                            <RandomChar/>\n                            <div className=\"char__content\">\n                                <CharList selectChar={(id) => setSelectedChar(id)}/>\n                                <CharInfo charId={selectedChar}/>\n                                <img className=\"bg-decoration\" src={bgHero} alt=\"vision\"/>\n                            </div>\n                        </Route>\n                        <Route path=\"/comics/:id\">\n                            <SingleComic/>\n                        </Route>\n                        <Route path=\"/comics\">\n                            <AppBanner/>\n                            <ComicsList/>\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport \"./styles/styles.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}